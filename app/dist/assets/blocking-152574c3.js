import{r as s,i as L}from"./createSvgIcon-9ace6ece.js";import{j as D}from"./index-64ee5db4.js";import{c as _,d as v}from"./middleware-4ff88eea.js";import{A as a}from"./constants-2e6fc461.js";import{u as I}from"./common-49ff51cc.js";var l={},p=L;Object.defineProperty(l,"__esModule",{value:!0});var S=l.default=void 0,E=p(s()),d=D,k=(0,E.default)((0,d.jsx)("path",{d:"m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"}),"Build");S=l.default=k;const B=I.getState().showSnackbar,h=_()(v((o,n)=>({blockingDevice:void 0,getBlockingDeviceLoading:!1,blockingDeviceList:void 0,getBlockingDeviceListLoading:!1,getBlockingDeviceListFilters:{perPage:10,page:0,q:""},blockingDeviceImportLogFile:[],getBlockingDeviceImportLogFileLoading:!1,blockingDeviceImportLogProcess:[],getBlockingDeviceImportLogProcessLoading:!1,buildBlockingDeviceConsolidatedReportLoading:!1,getBlockingDevice:e=>{o({getBlockingDeviceLoading:!0},!1,"GET_BLOCKING_DEVICE_START");const i=new URL(`${a}/blocking/reports/${e}`);fetch(i).then(async t=>await t.json()).then(t=>{o({blockingDevice:t,getBlockingDeviceLoading:!1},!1,"GET_BLOCKING_DEVICE_SUCCESS")})},setBlockingDeviceListFilters:e=>{o({getBlockingDeviceListFilters:e},!1,"SET_BLOCKING_DEVICE_LIST_FILTERS")},getBlockingDeviceList:()=>{o({getBlockingDeviceListLoading:!0},!1,"GET_BLOCKING_DEVICE_LIST_START");const e=new URL(`${a}/blocking/reports`),{perPage:i,page:t,q:c}=n().getBlockingDeviceListFilters,r={perPage:String(i),page:String(t),q:c};e.search=new URLSearchParams(r).toString(),fetch(e).then(async g=>await g.json()).then(g=>{o({blockingDeviceList:g,getBlockingDeviceListLoading:!1},!1,"GET_BLOCKING_DEVICE_LIST_SUCCESS")})},getBlockingDeviceImportLogFile:e=>{o({getBlockingDeviceImportLogFileLoading:!0},!1,"GET_BLOCKING_DEVICE_LOG_FILE_START");const i=new URL(`${a}/blocking/reports/${e}/log`),t={type:"file"};i.search=new URLSearchParams(t).toString(),fetch(i).then(async c=>await c.json()).then(c=>{o({blockingDeviceImportLogFile:c,getBlockingDeviceImportLogFileLoading:!1},!1,"GET_BLOCKING_DEVICE_LOG_FILE_SUCCESS")})},getBlockingDeviceImportLogProcess:e=>{o({getBlockingDeviceImportLogProcessLoading:!0},!1,"GET_BLOCKING_DEVICE_LOG_PROCESS_START");const i=new URL(`${a}/blocking/reports/${e}/log`),t={type:"process"};i.search=new URLSearchParams(t).toString(),fetch(i).then(async c=>await c.json()).then(c=>{o({blockingDeviceImportLogProcess:c,getBlockingDeviceImportLogProcessLoading:!1},!1,"GET_BLOCKING_DEVICE_LOG_PROCESS_SUCCESS")})},buildBlockingDeviceConsolidatedReport:({id:e,refreshBlockingDeviceOnSuccess:i,refreshBlockingDeviceListOnSuccess:t})=>{o({buildBlockingDeviceConsolidatedReportLoading:!0},!1,"BUILD_BLOCKING_DEVICE_CONSOLIDATED_START");const c=new URL(`${a}/blocking/reports/${e}/consolidated`);fetch(c,{method:"POST"}).then(async r=>await r.json()).then(()=>{o({buildBlockingDeviceConsolidatedReportLoading:!1},!1,"BUILD_BLOCKING_DEVICE_CONSOLIDATED_SUCCESS"),B("El consolidado se gener√≥ correctamente","success"),i&&(n().getBlockingDevice(e),n().getBlockingDeviceImportLogFile(e),n().getBlockingDeviceImportLogProcess(e)),t&&n().getBlockingDeviceList()})}}),{name:"blocking"}));export{S as d,h as u};
