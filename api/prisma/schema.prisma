// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]

  @@index([email])
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]
  users       User[]

  @@index([id])
  @@index([name])
}

model Permission {
  id        String   @id @default(uuid())
  action    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]

  @@index([id])
  @@index([action])
}

model Product {
  id        String     @id @default(uuid())
  name      String
  shortName String     @unique
  customers Customer[]

  @@index([id])
}

model Contact {
  id         String   @id @default(uuid())
  name       String
  email      String
  type       String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String

  @@index([id])
}

model Customer {
  id                   String    @id @default(uuid())
  customId             String
  name                 String
  email                String
  country              String
  registeredName       String
  rfc                  String
  address              String
  economicActivity     String
  status               String
  sellerName           String
  sellerComments       String
  comissionTerm        String
  percentageComissions Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  products             Product[]
  contacts             Contact[]
  devices              String[]
  skuStart             String?
  skuEnd               String?
  sku3m                Boolean   @default(false)
  skuHBMF              Boolean   @default(false)
  skuHBMPRE            Boolean   @default(false)
  dbName               String?

  @@index([id, email])
}

model NuovoReport {
  id           String                    @id @default(uuid())
  reportedAt   DateTime                  @unique
  logProcess   NuovoReportLogProcess[]
  logFile      NuovoReportLogFile[]
  consolidated NuovoReportConsolidated[]
  devices      BlockingDevice[]
}

model NuovoReportInfo {
  id        String   @id @default(uuid())
  name      String   @unique
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NuovoReportLogProcess {
  id            String      @id @default(uuid())
  name          String
  type          String
  // status        String // in-progress | finished | error
  createdAt     DateTime    @default(now())
  finishedAt    DateTime?
  nuovoReport   NuovoReport @relation(fields: [nuovoReportId], references: [id], onDelete: Cascade)
  nuovoReportId String
}

model NuovoReportLogFile {
  id            String      @id @default(uuid())
  originalName  String
  mimeType      String
  size          Int
  createdAt     DateTime    @default(now())
  nuovoReport   NuovoReport @relation(fields: [nuovoReportId], references: [id], onDelete: Cascade)
  nuovoReportId String
}

model NuovoReportConsolidated {
  id                  String      @id @default(uuid())
  customerName        String
  customerEmail       String
  billable            Int
  nonBillable         Int
  billableWeekly      Int
  nonBillableWeekly   Int
  billableBiweekly    Int
  nonBillableBiweekly Int
  deviceType          String
  skuStartCounter     Int
  skuEndCounter       Int
  nuovoReport         NuovoReport @relation(fields: [nuovoReportId], references: [id], onDelete: Cascade)
  nuovoReportId       String

  @@index([customerName, deviceType, nuovoReportId])
}

model BlockingDevice {
  customerId               String?
  deviceId                 Int         @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String?
  nuovoReport              NuovoReport @relation(fields: [nuovoReportId], references: [id], onDelete: Cascade)
  nuovoReportId            String

  @@index([billable, status, enrolledOn])
}

model BlockingDeviceComplete {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  nuovoReportId            String
  enrolledOnOnlyDate       DateTime? @db.Date
  billableCalculated       Boolean?

  @@index([type, customerEmail, enrolledOnOnlyDate, billableCalculated])
}

model BlockingDeviceCompleteSku {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  nuovoReportId            String
  enrolledOnOnlyDate       DateTime? @db.Date
  billableCalculated       Boolean?
  customerName             String
  skuStartCounter          Int?
  skuEndCounter            Int?

  @@index([type, customerEmail, enrolledOnOnlyDate, billableCalculated, nuovoReportId])
}

model BlockingDeviceCompleteSkuBackup {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  nuovoReportId            String
  enrolledOnOnlyDate       DateTime? @db.Date
  billableCalculated       Boolean?
  customerName             String
  skuStartCounter          Int?
  skuEndCounter            Int?

  @@index([type, customerEmail, enrolledOnOnlyDate, billableCalculated, nuovoReportId])
}

model BlockingDeviceReport {
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  billableText             String?
  sku3mCounter             Int?
  skuStartCounter          Int?
  skuEndCounter            Int?

  @@index([deviceId])
}

model PacCreditReport {
  id            Int      @id
  client        String?
  general_count Int?
  status_count  Json?
  success_score Int?
  error_score   Int?
  created_at    DateTime @default(now())
}
