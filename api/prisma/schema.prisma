// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]

  @@index([email])
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]
  users       User[]

  @@index([id])
  @@index([name])
}

model Permission {
  id        String   @id @default(uuid())
  action    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]

  @@index([id])
  @@index([action])
}

model Product {
  id        String     @id @default(uuid())
  name      String
  shortName String     @unique
  customers Customer[]

  @@index([id])
}

model Contact {
  id         String   @id @default(uuid())
  name       String
  email      String
  type       String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String

  @@index([id])
}

model Customer {
  id                   String    @id @default(uuid())
  customId             String
  name                 String
  email                String
  country              String
  registeredName       String
  rfc                  String
  address              String
  economicActivity     String
  status               String
  sellerName           String
  sellerComments       String
  comissionTerm        String
  percentageComissions Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  products             Product[]
  contacts             Contact[]
  devices              String[]
  skuStart             String?
  skuEnd               String?
  sku3m                Boolean   @default(false)
  skuHBMF              Boolean   @default(false)
  skuHBMPRE            Boolean   @default(false)
  dbName               String?

  @@index([id, email])
}

model BlockingDeviceImport {
  id           String                             @id @default(uuid())
  reportedAt   DateTime                           @unique
  logProcess   BlockingDeviceImportLogProcess[]
  logFile      BlockingDeviceImportLogFile[]
  consolidated BlockingDeviceConsolidatedReport[]
  devices      BlockingDeviceDataRaw[]
}

model BlockingDeviceVariable {
  id        String   @id @default(uuid())
  name      String   @unique
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlockingDeviceImportLogProcess {
  id                     String               @id @default(uuid())
  name                   String
  type                   String
  // status        String // in-progress | finished | error
  createdAt              DateTime             @default(now())
  finishedAt             DateTime?
  blockingDeviceImport   BlockingDeviceImport @relation(fields: [blockingDeviceImportId], references: [id], onDelete: Cascade)
  blockingDeviceImportId String
}

model BlockingDeviceImportLogFile {
  id                     String               @id @default(uuid())
  originalName           String
  mimeType               String
  size                   Int
  createdAt              DateTime             @default(now())
  blockingDeviceImport   BlockingDeviceImport @relation(fields: [blockingDeviceImportId], references: [id], onDelete: Cascade)
  blockingDeviceImportId String
}

model BlockingDeviceConsolidatedReport {
  id                     String               @id @default(uuid())
  customerName           String
  customerEmail          String
  billable               Int
  nonBillable            Int
  billableWeekly         Int
  nonBillableWeekly      Int
  billableBiweekly       Int
  nonBillableBiweekly    Int
  deviceType             String
  skuStartCounter        Int
  skuEndCounter          Int
  blockingDeviceImport   BlockingDeviceImport @relation(fields: [blockingDeviceImportId], references: [id], onDelete: Cascade)
  blockingDeviceImportId String

  @@index([customerName, deviceType, blockingDeviceImportId])
}

model BlockingDeviceConsolidatedHistory {
  id            Int       @id @default(autoincrement())
  customerName  String
  enrolldeDate  DateTime? @db.Date
  billableDelta Int
}

model BlockingDeviceDataRaw {
  customerId               String?
  deviceId                 Int                  @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String?
  blockingDeviceImport     BlockingDeviceImport @relation(fields: [blockingDeviceImportId], references: [id], onDelete: Cascade)
  blockingDeviceImportId   String
  billedDate               DateTime? @db.Date

  @@index([billable, status, enrolledOn])
}

model BlockingDeviceDataStepOne {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  blockingDeviceImportId   String
  billedDate               DateTime? @db.Date
  billableCalculated       Boolean?

  @@index([type, customerEmail, billedDate, billableCalculated])
}

model BlockingDeviceDataStepTwo {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  blockingDeviceImportId   String
  billableCalculated       Boolean?
  billedDate               DateTime? @db.Date
  customerName             String
  skuStartCounter          Int?
  skuEndCounter            Int?

  @@index([type, customerName, customerEmail, billedDate, billableCalculated, blockingDeviceImportId])
}

model BlockingDeviceDataStepTwoBackup {
  customerId               String?
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  customerEmail            String
  blockingDeviceImportId   String
  billableCalculated       Boolean?
  customerName             String
  skuStartCounter          Int?
  skuEndCounter            Int?
  billedDate               DateTime? @db.Date

  @@index([type, customerEmail, billedDate, billableCalculated, blockingDeviceImportId])
}

model BlockingDeviceCustomerReport {
  deviceId                 Int       @unique
  imei                     String?
  serial                   String?
  locked                   String?
  expectedLockStatus       String?
  lockType                 String?
  status                   String?
  isActivated              String?
  previousStatus           String?
  previousStatusChangedOn  DateTime?
  make                     String?
  model                    String?
  type                     String?
  deleted                  String?
  activatedDeviceDeleted   String?
  registeredOn             DateTime?
  enrolledOn               DateTime?
  unregisteredOn           DateTime?
  deletedOn                DateTime?
  activationDate           DateTime?
  billable                 String?
  lastConnectedAt          DateTime?
  nextLockDate             DateTime?
  appVersion               String?
  gettingStartedClicked    String?
  additionalSetupCompleted String?
  billableText             String?
  sku3mCounter             Int?
  skuStartCounter          Int?
  skuEndCounter            Int?
  billedDate               DateTime? @db.Date

  @@index([deviceId])
}

model PacCreditReport {
  id            Int      @id
  client        String?
  general_count Int?
  status_count  Json?
  success_score Int?
  error_score   Int?
  created_at    DateTime @default(now())
}
